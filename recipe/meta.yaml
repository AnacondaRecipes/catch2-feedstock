{% set version = "2.6.0" %}
{% set name = "catch2" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://github.com/catchorg/Catch2/archive/v{{ version }}.tar.gz
  sha256: 4c94a685557328eb1b0ed1017ca37c3a378742dc03b558cf02267b6ba8579577
  patches:
    - patches/0001-fix-catch-trap-for-mac-os-on-arm.patch  # [osx]

build:
  number: 0
  ignore_run_exports:
    - {{ compiler('cxx') }}
    - libstdcxx-ng  # [linux]
    - libcxx        # [osx]
    - vc            # [win]

requirements:
  build:
    - {{ compiler('cxx') }}
    - cmake
    - make      # [linux]
    - ninja
    - patch     # [osx]

test:
  requires:
    - {{ compiler('cxx') }}
    - cmake
    - ninja
  commands:
    - test -f "${PREFIX}/include/catch2/catch.hpp"  # [not win]
    - test -f "${PREFIX}/include/catch2/catch_reporter_automake.hpp"  # [not win]
    - test -f "${PREFIX}/include/catch2/catch_reporter_tap.hpp"  # [not win]
    - test -f "${PREFIX}/include/catch2/catch_reporter_teamcity.hpp"  # [not win]
    - test -f "${PREFIX}/lib/cmake/Catch2/Catch.cmake"  # [not win]
    - test -f "${PREFIX}/lib/cmake/Catch2/Catch2Config.cmake"  # [not win]
    - test -f "${PREFIX}/lib/cmake/Catch2/Catch2ConfigVersion.cmake"  # [not win]
    - test -f "${PREFIX}/lib/cmake/Catch2/Catch2Targets.cmake"  # [not win]
    - test -f "${PREFIX}/lib/cmake/Catch2/CatchAddTests.cmake"  # [not win]
    - test -f "${PREFIX}/lib/cmake/Catch2/ParseAndAddCatchTests.cmake"  # [not win]

    - if not exist %PREFIX%\\include\\catch2\\catch.hpp exit 1  # [win]
    - if not exist %PREFIX%\\include\\catch2\\catch_reporter_automake.hpp exit 1  # [win]
    - if not exist %PREFIX%\\include\\catch2\\catch_reporter_tap.hpp exit 1  # [win]
    - if not exist %PREFIX%\\include\\catch2\\catch_reporter_teamcity.hpp exit 1  # [win]
    - if not exist %PREFIX%\\lib\\cmake\\Catch2\\Catch.cmake exit 1  # [win]
    - if not exist %PREFIX%\\lib\\cmake\\Catch2\\Catch2Config.cmake exit 1  # [win]
    - if not exist %PREFIX%\\lib\\cmake\\Catch2\\Catch2ConfigVersion.cmake exit 1  # [win]
    - if not exist %PREFIX%\\lib\\cmake\\Catch2\\Catch2Targets.cmake exit 1  # [win]
    - if not exist %PREFIX%\\lib\\cmake\\Catch2\\CatchAddTests.cmake exit 1  # [win]
    - if not exist %PREFIX%\\lib\\cmake\\Catch2\\ParseAndAddCatchTests.cmake exit 1  # [win]

about:
  home: https://github.com/catchorg/Catch2
  license: BSL-1.0
  license_file: LICENSE.txt
  license_family: OTHER
  summary: |
    A modern, C++-native, header-only, test framework for unit-tests, TDD and BDD - using
    C++11, C++14, C++17 and later (or C++03 on the Catch1.x branch).
  description: |
    Catch2 stands for C++ Automated Test Cases in a Header and is a multi-paradigm test framework
    for C++. which also supports Objective-C (and maybe C). It is primarily distributed as a single
    header file, although certain extensions may require additional headers.
  doc_url: https://github.com/catchorg/Catch2
  dev_url: https://github.com/catchorg/Catch2

extra:
  recipe-maintainers:
    - mjscosta
